<?php
//Console debug output
//file_put_contents("php://stdout", sprintf("test")); 

function hello_theme() {
  return array(
    'hello_text' => array(
      'template' => 'hello-text',
      'variables' => array('text' => NULL)
    ),
  );
}

use Drupal\Core\Block\BlockPluginInterface;

function hello_block_view_hello_block_alter(array &$build, BlockPluginInterface $block) {
  $build = array('#theme' => 'hello_text', '#text' => 'you have been hooked');
}

use Drupal\Core\Form\FormStateInterface;

function hello_form_hello_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['hello_config']['#description'] = t('This hooked text will appear in the form.');
}

//hook_menu_alter does not exist any more in D8
function hello_menu_links_discovered_alter(&$links) {
  // do not use route name but route ID
  $links['hello.main']['title'] = 'World Time';
}

function hello_reponse($url, $method = 'GET', $params = array()) {
        $methods = [
          'POST',
          'GET',
          'PUT',
          'DELETE'
        ];
        $result = array();

        try {
          if (empty($url)) {
            throw new Exception("Invalid url");
          }
          if (in_array(strtoupper($method), $methods) === FALSE) {
            throw new Exception("Invalid method");
          }
          else {
            // will need a request call for GET, POST, PUT
            switch (strtoupper($method)) {
              case 'GET':
              case 'POST':
              case 'PUT':
              case 'DELETE':
                if (function_exists('hello_call_request')) {
                  $result = hello_call_request($url, $method, $params);
                }
                break;
              default:
                throw new Exception("Invalid method");
                break;
            }
          }
        }
        catch (Exception $e) {
          echo $e->getMessage();
        }

        return $result;
      }

      function hello_call_request($requesturl, $method, $params = array()) {

        // request url
        $url = $requesturl;

        try {

          // initialized curl
          $ch = curl_init();

          // set header for curl request
          $headers = array(
            "Cache-Control: no-cache",
            "Pragma: no-cache"
          );

          // set required setting with curl configuration
          curl_setopt($ch, CURLOPT_URL, $url);
          curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
          curl_setopt($ch, CURLOPT_FRESH_CONNECT, TRUE);
          curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
          curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method);
          curl_setopt($ch, CURLOPT_FORBID_REUSE, 1);

          // pass the additional values
          curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($params));

          // close the curl connection
          $result = curl_exec($ch);
          curl_close($ch);

          return $result;
        }
        catch (Exception $e) {
          echo $e->getMessage();
        }
      }
